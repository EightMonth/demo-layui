# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java Deploy with Maven

on:
  push:
    branches: [ master ]
    tags: [release-v*]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 8
 # 这里使用java8的环境, 其他项目在github action中找到对应的语言环境就行
        uses: actions/setup-java@v1
        with:
          java-version: 8
      - name: Build with Maven
 # 这里maven的打包命令, 其他项目修改为对应的打包命令
        run: |
          mvn package
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          push: true
          tags: eightmonth/demo-layui:latest




  pull-docker:
    needs: [build]
    name: Pull Docker
    runs-on: ubuntu-latest
    steps:
      - name: Deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USERNAME }}
          password: ${{ secrets.SERVER_PASSWORD }}
          port: 22
          script: |
            docker stop $(docker ps --filter ancestor=eightmonth/demo-layui -q)
            docker rm -f $(docker ps -a --filter ancestor=eightmonth/demo-layui:latest -q)
            docker rmi -f $(docker images  eightmonth/demo-layui:latest -q)
            docker login --username=${{ secrets.DOCKER_USERNAME }} --password ${{ secrets.DOCKER_PASSWORD }} https://registry-1.docker.io/v2/
            docker pull eightmonth/demo-layui:latest
            docker run -d -p 8080:8080 eightmonth/demo-layui:latest
# 上面暴露出了 8060端口, 填你项目端口即可 (没有端口可忽略)

